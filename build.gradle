buildscript {
    ext {
        springBootVersion = '2.6.6'
        kotlin_version = '1.6.21'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    group = 'com.bithumb.tide'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceCompatibility = '11'
    ext['log4j2.version'] = '2.17.1'
    ext['logback.version'] = '1.2.9'

    repositories {
        mavenCentral()
    }
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.2'
        }
    }
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation 'org.aspectj:aspectjweaver:1.9.9.1'
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}

project(':tide_source') {
    dependencies {
        implementation project(':tide_common')
    }
}
project(':tide_destination') {
    dependencies {
        implementation project(':tide_common')
    }
}
project(':tide_gateway') {
    dependencies {
    }
}
project(':tide_engine') {
    dependencies {
        implementation project(':tide_common')
    }
}
